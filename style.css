body {
    display: grid;
    grid-template-columns: 400px 300px 1fr;
    font-family: 'roboto';
    color: var(--text-clr);
    user-select: none;
}

body {
  margin: 0;
  min-height: 100vh;
  background-color: #000; /* base color */
  background-image: 
    radial-gradient(circle at 20% 30%, rgba(87, 97, 228, 0.266) 0%, transparent 60%),
    radial-gradient(circle at 80% 20%, rgba(181, 75, 156, 0.232) 0%, transparent 50%),
    radial-gradient(circle at 60% 70%, rgba(228, 74, 74, 0.247) 0%, transparent 60%),
    radial-gradient(circle at 30% 80%, rgba(45, 163, 202, 0.134) 0%, transparent 50%);
  background-repeat: no-repeat;
  background-size: cover;
  background-attachment: fixed;
} 


:root {
    --text-clr: rgba(124, 244, 206, 0.923);
    --borders-clr: rgb(216, 92, 142);
      --moving-border: linear-gradient(
        120deg,
        rgba(0, 255, 200, 0.4),
        rgba(80, 0, 255, 0.4),
        rgba(255, 0, 180, 0.3),
        rgba(0, 255, 200, 0.4)
    );
}

@font-face {
    font-family: 'roboto';
    src: url(./fonts/Roboto-Regular.ttf);
}

    .typing {
      display: inline-block;
      white-space: nowrap;
      overflow: hidden;
      border-right: 2px solid rgba(255,255,255,0.75);
      width: 0;
      animation: typing infinite 8s steps(30, end),  /* adjust steps to text length */
                 blink 0.7s step-end infinite alternate;
    }

    /* header welcoming animation */
    @keyframes typing {
      0%   { width: 0; }
      40%  { width: 33.5ch; }
      60%  { width: 33.5ch; }
      100% { width: 0ch; }
    }

    /* Border color */
    @keyframes blink {
      50% { border-color: transparent; }
    }
    @keyframes borderMove {
      0%   { background-position: 0% 50%; }
      50%  { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

.header::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: 5px; /* border thickness */
  border-radius: 20px;
  background: var(--moving-border); /* ðŸ’¡ use your variable */
  background-size: 300% 300%;
  animation: borderMove 6s linear infinite;
  mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  mask-composite: exclude;
  -webkit-mask-composite: xor;
  z-index: -1;
}

.header p:nth-child(1n + 2) { font-size: 20px; font-weight: bold; }
.header {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    padding: 20px;
}

.typing { color: var(--headers); }

svg {
  transition: transform 0.2s ease;
}

svg:hover {
  cursor: pointer;
  transform: scale(1.1);
  transform-origin: center;
}

.rules {
    display: grid;
    grid-template-rows: 200px 100%;
    place-items: center;
}

.main {
    display: grid;
    grid-template-rows: repeat(3, 160px);
    place-items: center;
    grid-column: 3;
}

.buttons {
    display: flex;
    gap: 100px;
}

.computerchoice {
    font-weight: bold;
    display: flex;
    justify-content: center;
    height: 100px;
}

.compt {
    border: solid 2px var(--borders-clr);
    padding-right: 90px;
    padding-left: 40px;
    display: flex;
    gap: 20px;
    align-items: center;
    border-radius: 5px;
}

.computer, .human {
    border: solid 2px var(--borders-clr);
    border-radius: 5px;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    width: 200px;
}

.scoreboard {
    display: grid;
    grid-template-columns: 350px;
    grid-template-rows: 1fr 1fr 1fr;
    grid-auto-flow: column;
    place-items: center;
    grid-column: 2;
    grid-row: 1;
}

.board {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    height: 150px;
}
